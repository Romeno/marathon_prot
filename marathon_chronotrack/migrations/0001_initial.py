# Generated by Django 2.0.6 on 2018-08-10 04:19

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('marathon_marathons', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CtBracket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024, verbose_name='Bracket name')),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marathon_marathons.MarathonRoute', verbose_name='Bracket route')),
            ],
            options={
                'verbose_name': 'Bracket',
                'verbose_name_plural': 'Brackets',
                'db_table': 'ct_bracket',
            },
        ),
        migrations.CreateModel(
            name='CtInterval',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024, verbose_name='Interval name')),
            ],
            options={
                'verbose_name': 'Interval',
                'verbose_name_plural': 'Interval',
                'db_table': 'ct_interval',
            },
        ),
        migrations.CreateModel(
            name='CtIntervalResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chip_time', models.IntegerField(verbose_name='Chip time of a runner')),
                ('interval', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marathon_chronotrack.CtInterval', verbose_name='Interval of the result measurement')),
            ],
            options={
                'verbose_name': 'Interval result',
                'verbose_name_plural': 'Interval results',
                'db_table': 'ct_interval_result',
            },
        ),
        migrations.CreateModel(
            name='CtTimingPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024, verbose_name='Timing point name')),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marathon_marathons.MarathonRoute', verbose_name='Marathon route of the timing point')),
            ],
            options={
                'verbose_name': 'Timing point',
                'verbose_name_plural': 'Timing points',
                'db_table': 'ct_timing_point',
            },
        ),
        migrations.CreateModel(
            name='MarathonRunner',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('id_external', models.BigIntegerField(verbose_name='Id of runner got from client')),
                ('first_name', models.CharField(max_length=1024, verbose_name='First name')),
                ('last_name', models.CharField(max_length=1024, verbose_name='Last name')),
                ('age', models.PositiveIntegerField(verbose_name='Age')),
                ('birthday', models.DateField(verbose_name='Birthday')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1, verbose_name='Gender')),
                ('email', models.EmailField(max_length=1024, verbose_name='Email')),
                ('citizenship', models.CharField(max_length=1024, verbose_name='Citizenship')),
                ('phone', models.CharField(max_length=32, verbose_name='Phone number')),
                ('user_register_date', models.DateField(verbose_name='User registration date')),
                ('second_phone', models.CharField(blank=True, max_length=50, verbose_name='Second phone')),
                ('city', models.CharField(max_length=1024, verbose_name='City')),
                ('emergency_contact', models.CharField(max_length=1024, verbose_name='Emergency contact name')),
                ('emergency_phone', models.CharField(max_length=32, verbose_name='Emergency contact phone')),
                ('t_shirt_size', models.CharField(blank=True, max_length=8, verbose_name='T-shirt size')),
                ('running_club', models.CharField(max_length=1024, verbose_name='Running club')),
                ('is_disabled', models.NullBooleanField(verbose_name='Is runner a disabled person')),
                ('is_prof', models.NullBooleanField(verbose_name='Is runner a professional sportsman')),
                ('is_child', models.BooleanField(verbose_name='Is runner a child')),
                ('is_elite', models.BooleanField(verbose_name='Is runner an elite sportsman')),
                ('marathon_registration_datetime', models.DateTimeField(verbose_name='Marathon registration date and time')),
                ('cluster_run_letter', models.CharField(max_length=10, verbose_name='Run cluster letter')),
                ('runner_number', models.IntegerField(verbose_name='Runner number')),
                ('place', models.IntegerField(blank=True, null=True, verbose_name='Current runner place')),
                ('is_active', models.BooleanField(verbose_name='Is active')),
                ('marathon', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='marathon_marathons.Marathon', verbose_name='Marathon in which runner participates')),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='marathon_marathons.MarathonRoute', verbose_name='Route which runner will run on')),
            ],
            options={
                'verbose_name': 'Marathon runner',
                'verbose_name_plural': 'Marathon runners',
                'db_table': 'marathon_runner',
            },
        ),
        migrations.AddField(
            model_name='ctintervalresult',
            name='runner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marathon_chronotrack.MarathonRunner', verbose_name='Runner for which results are measured'),
        ),
    ]
