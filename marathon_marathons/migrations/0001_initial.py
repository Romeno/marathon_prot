# Generated by Django 2.0.6 on 2018-08-10 04:19

from django.db import migrations, models
import django.db.models.deletion
import filebrowser.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Marathon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024, verbose_name='Title of a marathon')),
                ('start_time', models.DateTimeField(verbose_name='Time when all marathon activities start')),
                ('end_time', models.DateTimeField(verbose_name='Time when all marathon activities end')),
                ('ct_event_id', models.IntegerField(verbose_name='Chronotrack event Id for this marathon')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
            ],
            options={
                'verbose_name': 'Marathon',
                'verbose_name_plural': 'Marathons',
                'db_table': 'marathon',
            },
        ),
        migrations.CreateModel(
            name='MarathonHeight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lat', models.FloatField(verbose_name='Latitude of the point on the route')),
                ('long', models.FloatField(verbose_name='longitude of the point on the route')),
                ('elevation', models.FloatField(verbose_name='Elevation of the point in meters')),
                ('resolution', models.FloatField(verbose_name='Resolution of the point elevation in meters')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
            ],
            options={
                'verbose_name': 'Marathon route heights',
                'verbose_name_plural': 'Marathon routes heigths',
                'db_table': 'marathon_height',
            },
        ),
        migrations.CreateModel(
            name='MarathonRoute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1044, verbose_name='Route title')),
                ('start_time', models.DateTimeField(blank=True, null=True, verbose_name='Time when all marathon activities start')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='Time when all marathon activities end')),
                ('map', filebrowser.fields.FileBrowseField(max_length=2048, verbose_name='GeoJSON of exported Yandex Constructor map of the route')),
                ('parsed_map', models.TextField(blank=True)),
                ('raw_elevation_data', models.TextField(blank=True)),
                ('start_region_map', filebrowser.fields.FileBrowseField(max_length=2048, verbose_name='GeoJSON of exported Yandex Constructor map of the start region')),
                ('parsed_start_region_map', models.TextField(blank=True)),
                ('finish_region_map', filebrowser.fields.FileBrowseField(max_length=2048, verbose_name='GeoJSON of exported Yandex Constructor map of the finish region')),
                ('parsed_finish_region_map', models.TextField(blank=True)),
                ('ct_race_id', models.IntegerField(verbose_name='Chronotrack race Id for this marathon route')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('marathon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marathon_marathons.Marathon', verbose_name='Marathon whose route it is')),
            ],
            options={
                'verbose_name': 'Marathon route',
                'verbose_name_plural': 'Marathon routes',
                'db_table': 'marathon_route',
            },
        ),
        migrations.AddField(
            model_name='marathonheight',
            name='route',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marathon_marathons.MarathonRoute', verbose_name='Route for which heights are specified'),
        ),
    ]
